#connexion ssh d'ansible 
ansible_user: root
ansible_host: "{{ interfaces.controle.address }}"
ansible_ssh_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          33376466616366306635666539316630333931353866623630646137306361653633393232323936
          3134393739306661363635393534353861366332623463320a613134393637356661303436316336
          31366436333938353830666635636231323665373036343130383461386165363034633439643336
          3838646431636233370a643139343730346662656162393830323561623362646365303430383730
          3439

#Gateway de la b120 et dns
gateway: 192.168.130.254
resolv_nameservers:
  - 192.168.130.202 
  - 212.27.40.240 
  - 212.27.40.241
resolv_domain: b120.esisar.fr
resolv_search:
  - b120.esisar.fr
# route pour la gateway
routes_group:
  010 default gw: ip route replace default via {{ gateway }} dev {{ interfaces.extern.name }} onlink

# variable du role MichaelRigart.interfaces, generation en fonction de la variable interfaces
interfaces_ether_interfaces: "{{
  interfaces |
  json_query(\"*.{device: name, 
                  address: address,
                  bootproto: 'static',
                  netmask: '255.255.255.0'}\")
}}"

# autorisation de sortie pour les machines internes au réseau
postrouting:
  - ip: 192.168.30.2
  - ip: 192.168.30.3
  - ip: 192.168.10.2

# variable du role mikegleasonjr.firewall de définition des règles iptables
firewall_v4_group_rules:
  001 default input policy:
    - -P INPUT ACCEPT
  002 default output policy:
    - -P OUTPUT ACCEPT
  003 default forward policy:
    - -P FORWARD ACCEPT
# règeles de postrouting
  300 nat postrouting: "{{ 
    postrouting | 
    json_query(\"[].ip\") | 
    map('regex_replace', '(.*)', '-t nat -A POSTROUTING -s \\1 -o ens19 -j MASQUERADE') |  
    list 
  }}"
#  010 allow loopback:
#    - -A INPUT -i lo -j ACCEPT
#  020 allow ping replies:
#    - -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
#    - -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT
#  100 allow established related:
#    - -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#    - -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#  110 DNS Out:
#    - -t filter -A OUTPUT -p tcp --dport 53 -j ACCEPT
#    - -t filter -A OUTPUT -p udp --dport 53 -j ACCEPT
#  120  HTTP OUT:
#    - -t filter -A OUTPUT -p tcp --dport 80 -j ACCEPT
#    - -t filter -A OUTPUT -p tcp --dport 443 -j ACCEPT
#  200 allow ssh on control interface :
#    - -t filter -i {{ interfaces.controle.name }} -A INPUT -p tcp --dport 22 -j ACCEPT
#    - -t filter -A OUTPUT -p TCP --sport 22 -j ACCEPT
#  500 keepalived:
#    - -p vrrp -i {{ interfaces.fw_link.name }} -A INPUT -j ACCEPT
#    - -p vrrp -A OUTPUT -j ACCEPT

interfaces:
  controle:
    name: ens18
  fw_link:
    name: ens20.120
  extern:
    name: ens19
    virt_address: 192.168.130.59
  dmz_vpn_ext:
    name: ens20.110
    virt_address: 192.168.10.254
  dmz_vpn_int:
    name: ens20.100
    virt_address: 192.168.0.254
  dmz_publique:
    name: ens20.130
    virt_address: 192.168.30.254
  dmz_privee:
    name: ens20.140
    virt_address: 192.168.40.254
  dmz_client_intranet_externe:
    name: ens20.150
    virt_address: 192.168.50.254
  dmz_client_http:
    name: ens20.160
    virt_address: 192.168.60.254
  sw_802_1:
    name: ens20.170
    virt_address: 192.168.70.254

vrrp_instances: "[
  {% for key, value in interfaces.iteritems() %}
    {% if value.virt_address is defined %}
    {
      'name': '{{ key }}',
      'interface': '{{ interfaces.fw_link.name }}',
      'state': 'BACKUP',
      'virtual_router_id': {{ loop.index + 60 }},
      'priority': '{{ keepalive_prio }}',
      'advert_int': 1,
      'authentication': 
        {
          'auth_type': 'PASS',
          'auth_pass': 'zzzz',
        },
      'unicast_src_ip': '{{ interfaces.fw_link.address }}',
      'unicast_peer': '{{ keepalive_peer }}',
      'virtual_ipaddress': 
        [
          {
            'address': '{{ value.virt_address }}/24',
            'interface': '{{ value.name }}',
          },
        ],
      'nopreempt': 'false',
      'garp_master_delay': '1',
    },
    {% endif %}
  {% endfor %}
  ]
"

vrrp_sync_group:
  - name: G1
    group: "{{ vrrp_instances | json_query(\"[].name\") | list }}"
    notify_master:
    notify_backup:
    notify_fault: