#connexion ssh d'ansible 
ansible_user: root
ansible_host: "{{ interfaces.controle.address }}"

resolv_nameservers:
  - 192.168.30.2

#Gateway de la b120 et dns
gateway: 192.168.130.254
# route pour la gateway
routes_group:
  010 default gw: ip route replace default via {{ gateway }} dev {{ interfaces.extern.name }} onlink
  020 vpn 1: ip route replace 192.168.5.0/24 via 192.168.0.2 dev {{ interfaces.dmz_vpn_int.name }} onlink
  030 dmz_web: ip route replace 192.168.65.0/24 via 192.168.60.11 dev {{ interfaces.dmz_client_http.name }} onlink
  

# variable du role MichaelRigart.interfaces, generation en fonction de la variable interfaces
interfaces_ether_interfaces: "{{
  interfaces |
  json_query(\"*.{device: name, 
                  address: address,
                  bootproto: 'static',
                  netmask: '255.255.255.0'}\")
}}"


# variable du role mikegleasonjr.firewall de définition des règles iptables
firewall_v4_group_rules:
  001 default input policy:
    - -P INPUT DROP
  002 default output policy:
    - -P OUTPUT DROP
  003 default forward policy:
    - -P FORWARD DROP
  010 allow loopback:
    - -A INPUT -i lo -j ACCEPT
  020 allow ping replies:
    - -A INPUT -p icmp -j ACCEPT
    - -A OUTPUT -p icmp -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT
  100 allow established related:
    - -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT
    - -A OUTPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT
    - -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
  110 DNS Out:
    - -t filter -A OUTPUT -o {{ interfaces.dmz_publique.name }} -p udp --dport 53 -d 192.168.30.2 -j ACCEPT
  120 HTTP OUT:
    - -t filter -A OUTPUT -p tcp --dport 80 -j ACCEPT
    - -t filter -A OUTPUT -p tcp --dport 443 -j ACCEPT
  130 conntrackd UDP:
    - -t filter -A OUTPUT -o {{ interfaces.fw_link.name }} -p udp --dport {{ conntrackd_listen_udp_port }}  -j ACCEPT
    - -t filter -A INPUT -i {{ interfaces.fw_link.name }} -p udp --dport {{ conntrackd_listen_udp_port }} -j ACCEPT
  200 allow ssh:
    - -t filter -A INPUT -i {{ interfaces.controle.name }} -p tcp --dport 22 -s 10.8.0.0/24 -d {{ interfaces.controle.address }} -j ACCEPT
    - -t filter -A INPUT -i {{ interfaces.dmz_vpn_int.name }} -p tcp --dport 22 -s 192.168.5.0/24 -d {{ interfaces.dmz_vpn_int.address }} -j ACCEPT
  500 keepalived:
    - -p vrrp -A INPUT -i {{ interfaces.fw_link.name }} -j ACCEPT
    - -p vrrp -A OUTPUT -o {{ interfaces.fw_link.name }} -j ACCEPT
  600 accès vpn:
    - -t nat -A PREROUTING -d 192.168.130.53 -i {{ interfaces.extern.name }} -p tcp --dport 7001 -j DNAT --to-destination 192.168.10.2
    - -t filter -A FORWARD -i {{interfaces.extern.name}} -o {{interfaces.dmz_vpn_ext.name}} -d 192.168.10.2 -p tcp --dport 7001 -j ACCEPT
  601 accès vpn_intranet:
    - -t nat -A PREROUTING -d 192.168.130.54 -i {{ interfaces.extern.name }} -p tcp --dport 7001 -j DNAT --to-destination 192.168.50.2
    - -t filter -A FORWARD -i {{interfaces.extern.name}} -o {{interfaces.dmz_client_intranet_externe.name}} -d 192.168.50.2 -p tcp --dport 7001 -j ACCEPT
  610 vpn, accès dmz_privee:
    - -t filter -A FORWARD -i {{interfaces.dmz_vpn_int.name}} -o {{interfaces.dmz_privee.name}} -s 192.168.5.0/24 -p tcp --dport 22 -d 192.168.40.0/24 -j ACCEPT 
  630 accès dns_publique:
    - -t nat -A PREROUTING -d 192.168.130.53 -i {{ interfaces.extern.name }} -p udp --dport 53 -j DNAT --to-destination 192.168.30.2
  631 dns_publique reqêtes locales et externes:
    #- -t filter -A FORWARD -o {{ interfaces.dmz_publique.name }} -p udp --dport 53 -d 192.168.30.2 -j ACCEPT
    - -t filter -A FORWARD -o {{ interfaces.dmz_publique.name }} -p udp --dport 53 -j ACCEPT
  639 dns_publique accès dns b120:
    - -t nat -A POSTROUTING -s 192.168.30.2 -o {{ interfaces.extern.name }} -p udp --dport 53 -j SNAT --to-source 192.168.130.53
    - -t filter -A FORWARD -i {{interfaces.dmz_publique.name}} -o {{interfaces.extern.name}} -s 192.168.30.2 -p udp --dport 53 -d 192.168.130.202 -j ACCEPT
  700 postfix:
    - -t nat -A PREROUTING -p tcp --dport 25 -d 192.168.130.53 -j DNAT --to-destination 192.168.30.3
    - -A FORWARD -o {{interfaces.dmz_publique.name}} -p tcp --dport 25 -j ACCEPT
    - -t nat -A POSTROUTING -p tcp --dport 25 -s 192.168.30.3 -j SNAT --to-source 192.168.130.53
    - -A FORWARD -i {{interfaces.dmz_publique.name}} -p tcp --dport 25 -j ACCEPT
  800 web failover:
    - -t nat -A PREROUTING -p tcp --dport 80 -d 192.168.130.53 -j DNAT --to-destination 192.168.60.1
    - -A FORWARD -o {{interfaces.dmz_client_http.name}} -p tcp --dport 80 -j ACCEPT
  810 web ha:
    - -t nat -A PREROUTING -p tcp --dport 80 -d 192.168.130.54 -j DNAT --to-destination 192.168.60.11
    - -A FORWARD -o {{interfaces.dmz_client_http.name}} -p tcp --dport 80 -j ACCEPT
    - -t nat -A PREROUTING -p tcp --dport 443 -d 192.168.130.54 -j DNAT --to-destination 192.168.60.11
    - -A FORWARD -o {{interfaces.dmz_client_http.name}} -p tcp --dport 443 -j ACCEPT
  810 accès vpn:
    - -t nat -A PREROUTING -d 192.168.130.54 -i {{ interfaces.extern.name }} -p tcp --dport 80 -j DNAT --to-destination 192.168.60.11
    - -t filter -A FORWARD -i {{interfaces.extern.name}} -o {{interfaces.dmz_client_http.name}} -d 192.168.60.11 -p tcp --dport 80 -j ACCEPT
  850 accès ldap:
    - -t filter -A FORWARD -o {{interfaces.dmz_privee.name}} -d 192.168.40.3 -s 192.168.0.0/17 -p tcp --dport 389 -j ACCEPT
    - -t filter -A FORWARD -o {{interfaces.dmz_privee.name}} -d 192.168.40.3 -s 192.168.0.0/17 -p tcp --dport 636 -j ACCEPT
  860 envoi logs:
    - -t filter -A OUTPUT -o {{interfaces.dmz_privee.name}} -d 192.168.40.4 -p udp --dport 514 -j ACCEPT
    - -t filter -A FORWARD -o {{interfaces.dmz_privee.name}} -d 192.168.40.4 -s 192.168.0.0/17 -p udp --dport 514 -j ACCEPT
  # TODO à supprimer
  121 HTTP OUT ALL HOST:
    - -t nat -A POSTROUTING -p tcp --dport 80 -j SNAT --to-source 192.168.130.53
    - -t nat -A POSTROUTING -p tcp --dport 443 -j SNAT --to-source 192.168.130.53
    - -t filter -A FORWARD -p tcp --dport 80 -j ACCEPT
    - -t filter -A FORWARD -p tcp --dport 443 -j ACCEPT
  

interfaces:
  controle:
    name: ens18
  fw_link:
    name: ens20.120
  extern:
    name: ens19
    virt_address: 
      - 192.168.130.53 # vpn
      - 192.168.130.54 # dns_publique ?
      - 192.168.130.55 # mail ?
      - 192.168.130.56 
      - 192.168.130.59 # fw
  dmz_vpn_ext:
    name: ens20.110
    virt_address: [192.168.10.254]
  dmz_vpn_int:
    name: ens20.100
    virt_address: [192.168.0.254]
  dmz_publique:
    name: ens20.130
    virt_address: [192.168.30.254]
  dmz_privee:
    name: ens20.140
    virt_address: [192.168.40.254]
  dmz_client_intranet_externe:
    name: ens20.150
    virt_address: [192.168.50.254]
  dmz_client_http:
    name: ens20.160
    virt_address: [192.168.60.254]
  sw_802_1:
    name: ens20.170
    virt_address: [192.168.70.254]

vrrp_instances:
  - name: VI_FW
    interface: "{{ interfaces.fw_link.name }}"
    state: BACKUP
    virtual_router_id: 60
    priority: "{{ keepalive_prio }}"
    advert_int: 1
    authentication: 
      auth_type: PASS
      auth_pass: zzzz
    unicast_src_ip: "{{ interfaces.fw_link.address }}"
    unicast_peer: "{{ keepalive_peer }}"
    virtual_ipaddress: "[
        {% for key, value in interfaces.iteritems() %}
        {% if value.virt_address is defined %}
        {% for address in value.virt_address %}
        {
          'address': '{{ address }}',
          'interface': '{{ value.name }}',
        },
        {% endfor %}
        {% endif %}
        {% endfor %}
    ]"
    nopreempt: false
    garp_master_delay: 1
    track_interface: "[
        {% for key, value in interfaces.iteritems() %}
        {% if value.virt_address is defined %}
        '{{ value.name }}',
        {% endif %}
        {% endfor %}
    ]"

vrrp_sync_group:
  - name: G1
    group: "{{ vrrp_instances | json_query(\"[].name\") | list }}"
    notify_master: /etc/conntrackd/primary-backup.sh primary
    notify_backup: /etc/conntrackd/primary-backup.sh backup
    notify_fault: /etc/conntrackd/primary-backup.sh fault

conntrackd_listen_address: "{{ interfaces.fw_link.address }}"
conntrackd_peer_address: "{{ keepalive_peer }}"
conntrackd_listen_udp_port: 3780
conntrackd_link_interface: "{{ interfaces.fw_link.name }}"
enable_conntrackd: true
config_conntrackd: true
conntrackd_ignore_addresses: "[
  {% if interfaces.controle.address is defined %}
  '{{ interfaces.controle.address }}',
  {% endif %}
  {% if interfaces.fw_link.address is defined %}
  '{{ interfaces.fw_link.address }}',
  {% endif %}
]"
#conntrackd_ignore_addresses: []
